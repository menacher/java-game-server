// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: nadron.proto

package io.nadron.networking;

public final class NadronMessages {
  private NadronMessages() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code loot.EventType}
   */
  public enum EventType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * Event code Constants
     * </pre>
     *
     * <code>ANY = 0;</code>
     */
    ANY(0),
    /**
     * <code>PROTOCOL_VERSION = 1;</code>
     */
    PROTOCOL_VERSION(1),
    /**
     * <code>CONNECT = 2;</code>
     */
    CONNECT(2),
    /**
     * <code>RECONNECT = 3;</code>
     */
    RECONNECT(3),
    /**
     * <code>CONNECT_FAILED = 6;</code>
     */
    CONNECT_FAILED(6),
    /**
     * <code>LOG_IN = 8;</code>
     */
    LOG_IN(8),
    /**
     * <code>LOG_OUT = 10;</code>
     */
    LOG_OUT(10),
    /**
     * <code>LOG_IN_SUCCESS = 11;</code>
     */
    LOG_IN_SUCCESS(11),
    /**
     * <code>LOG_IN_FAILURE = 12;</code>
     */
    LOG_IN_FAILURE(12),
    /**
     * <code>LOG_OUT_SUCCESS = 14;</code>
     */
    LOG_OUT_SUCCESS(14),
    /**
     * <code>LOG_OUT_FAILURE = 15;</code>
     */
    LOG_OUT_FAILURE(15),
    /**
     * <code>GAME_LIST = 16;</code>
     */
    GAME_LIST(16),
    /**
     * <code>ROOM_LIST = 18;</code>
     */
    ROOM_LIST(18),
    /**
     * <code>GAME_ROOM_JOIN = 20;</code>
     */
    GAME_ROOM_JOIN(20),
    /**
     * <code>GAME_ROOM_LEAVE = 22;</code>
     */
    GAME_ROOM_LEAVE(22),
    /**
     * <code>GAME_ROOM_JOIN_SUCCESS = 24;</code>
     */
    GAME_ROOM_JOIN_SUCCESS(24),
    /**
     * <code>GAME_ROOM_JOIN_FAILURE = 25;</code>
     */
    GAME_ROOM_JOIN_FAILURE(25),
    /**
     * <pre>
     *Event sent from server to client to start message sending from client to server.
     * </pre>
     *
     * <code>START = 26;</code>
     */
    START(26),
    /**
     * <pre>
     * Event sent from server to client to stop messages from being sent to server.
     * </pre>
     *
     * <code>STOP = 27;</code>
     */
    STOP(27),
    /**
     * <pre>
     * Incoming data from server or from another session.
     * </pre>
     *
     * <code>SESSION_MESSAGE = 28;</code>
     */
    SESSION_MESSAGE(28),
    /**
     * <pre>
     * This event is used to send data from the current machine to remote server
     * </pre>
     *
     * <code>NETWORK_MESSAGE = 29;</code>
     */
    NETWORK_MESSAGE(29),
    /**
     * <code>CHANGE_ATTRIBUTE = 32;</code>
     */
    CHANGE_ATTRIBUTE(32),
    /**
     * <pre>
     * Use this one for handling close event of ws.
     * </pre>
     *
     * <code>DISCONNECT = 34;</code>
     */
    DISCONNECT(34),
    /**
     * <code>EXCEPTION = 36;</code>
     */
    EXCEPTION(36),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * Event code Constants
     * </pre>
     *
     * <code>ANY = 0;</code>
     */
    public static final int ANY_VALUE = 0;
    /**
     * <code>PROTOCOL_VERSION = 1;</code>
     */
    public static final int PROTOCOL_VERSION_VALUE = 1;
    /**
     * <code>CONNECT = 2;</code>
     */
    public static final int CONNECT_VALUE = 2;
    /**
     * <code>RECONNECT = 3;</code>
     */
    public static final int RECONNECT_VALUE = 3;
    /**
     * <code>CONNECT_FAILED = 6;</code>
     */
    public static final int CONNECT_FAILED_VALUE = 6;
    /**
     * <code>LOG_IN = 8;</code>
     */
    public static final int LOG_IN_VALUE = 8;
    /**
     * <code>LOG_OUT = 10;</code>
     */
    public static final int LOG_OUT_VALUE = 10;
    /**
     * <code>LOG_IN_SUCCESS = 11;</code>
     */
    public static final int LOG_IN_SUCCESS_VALUE = 11;
    /**
     * <code>LOG_IN_FAILURE = 12;</code>
     */
    public static final int LOG_IN_FAILURE_VALUE = 12;
    /**
     * <code>LOG_OUT_SUCCESS = 14;</code>
     */
    public static final int LOG_OUT_SUCCESS_VALUE = 14;
    /**
     * <code>LOG_OUT_FAILURE = 15;</code>
     */
    public static final int LOG_OUT_FAILURE_VALUE = 15;
    /**
     * <code>GAME_LIST = 16;</code>
     */
    public static final int GAME_LIST_VALUE = 16;
    /**
     * <code>ROOM_LIST = 18;</code>
     */
    public static final int ROOM_LIST_VALUE = 18;
    /**
     * <code>GAME_ROOM_JOIN = 20;</code>
     */
    public static final int GAME_ROOM_JOIN_VALUE = 20;
    /**
     * <code>GAME_ROOM_LEAVE = 22;</code>
     */
    public static final int GAME_ROOM_LEAVE_VALUE = 22;
    /**
     * <code>GAME_ROOM_JOIN_SUCCESS = 24;</code>
     */
    public static final int GAME_ROOM_JOIN_SUCCESS_VALUE = 24;
    /**
     * <code>GAME_ROOM_JOIN_FAILURE = 25;</code>
     */
    public static final int GAME_ROOM_JOIN_FAILURE_VALUE = 25;
    /**
     * <pre>
     *Event sent from server to client to start message sending from client to server.
     * </pre>
     *
     * <code>START = 26;</code>
     */
    public static final int START_VALUE = 26;
    /**
     * <pre>
     * Event sent from server to client to stop messages from being sent to server.
     * </pre>
     *
     * <code>STOP = 27;</code>
     */
    public static final int STOP_VALUE = 27;
    /**
     * <pre>
     * Incoming data from server or from another session.
     * </pre>
     *
     * <code>SESSION_MESSAGE = 28;</code>
     */
    public static final int SESSION_MESSAGE_VALUE = 28;
    /**
     * <pre>
     * This event is used to send data from the current machine to remote server
     * </pre>
     *
     * <code>NETWORK_MESSAGE = 29;</code>
     */
    public static final int NETWORK_MESSAGE_VALUE = 29;
    /**
     * <code>CHANGE_ATTRIBUTE = 32;</code>
     */
    public static final int CHANGE_ATTRIBUTE_VALUE = 32;
    /**
     * <pre>
     * Use this one for handling close event of ws.
     * </pre>
     *
     * <code>DISCONNECT = 34;</code>
     */
    public static final int DISCONNECT_VALUE = 34;
    /**
     * <code>EXCEPTION = 36;</code>
     */
    public static final int EXCEPTION_VALUE = 36;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static EventType valueOf(int value) {
      return forNumber(value);
    }

    public static EventType forNumber(int value) {
      switch (value) {
        case 0: return ANY;
        case 1: return PROTOCOL_VERSION;
        case 2: return CONNECT;
        case 3: return RECONNECT;
        case 6: return CONNECT_FAILED;
        case 8: return LOG_IN;
        case 10: return LOG_OUT;
        case 11: return LOG_IN_SUCCESS;
        case 12: return LOG_IN_FAILURE;
        case 14: return LOG_OUT_SUCCESS;
        case 15: return LOG_OUT_FAILURE;
        case 16: return GAME_LIST;
        case 18: return ROOM_LIST;
        case 20: return GAME_ROOM_JOIN;
        case 22: return GAME_ROOM_LEAVE;
        case 24: return GAME_ROOM_JOIN_SUCCESS;
        case 25: return GAME_ROOM_JOIN_FAILURE;
        case 26: return START;
        case 27: return STOP;
        case 28: return SESSION_MESSAGE;
        case 29: return NETWORK_MESSAGE;
        case 32: return CHANGE_ATTRIBUTE;
        case 34: return DISCONNECT;
        case 36: return EXCEPTION;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<EventType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        EventType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<EventType>() {
            public EventType findValueByNumber(int number) {
              return EventType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return io.nadron.networking.NadronMessages.getDescriptor().getEnumTypes().get(0);
    }

    private static final EventType[] VALUES = values();

    public static EventType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private EventType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:loot.EventType)
  }

  public interface ConnectionConfigOrBuilder extends
      // @@protoc_insertion_point(interface_extends:loot.ConnectionConfig)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string user = 1;</code>
     */
    java.lang.String getUser();
    /**
     * <code>optional string user = 1;</code>
     */
    com.google.protobuf.ByteString
        getUserBytes();

    /**
     * <code>optional string pass = 2;</code>
     */
    java.lang.String getPass();
    /**
     * <code>optional string pass = 2;</code>
     */
    com.google.protobuf.ByteString
        getPassBytes();

    /**
     * <code>optional string connectionKey = 3;</code>
     */
    java.lang.String getConnectionKey();
    /**
     * <code>optional string connectionKey = 3;</code>
     */
    com.google.protobuf.ByteString
        getConnectionKeyBytes();

    /**
     * <code>optional string nadronTcpHostName = 4;</code>
     */
    java.lang.String getNadronTcpHostName();
    /**
     * <code>optional string nadronTcpHostName = 4;</code>
     */
    com.google.protobuf.ByteString
        getNadronTcpHostNameBytes();

    /**
     * <code>optional int32 tcpPort = 5;</code>
     */
    int getTcpPort();

    /**
     * <code>optional string nadronUdpHostName = 6;</code>
     */
    java.lang.String getNadronUdpHostName();
    /**
     * <code>optional string nadronUdpHostName = 6;</code>
     */
    com.google.protobuf.ByteString
        getNadronUdpHostNameBytes();

    /**
     * <code>optional int32 udpPort = 7;</code>
     */
    int getUdpPort();
  }
  /**
   * Protobuf type {@code loot.ConnectionConfig}
   */
  public  static final class ConnectionConfig extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:loot.ConnectionConfig)
      ConnectionConfigOrBuilder {
    // Use ConnectionConfig.newBuilder() to construct.
    private ConnectionConfig(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ConnectionConfig() {
      user_ = "";
      pass_ = "";
      connectionKey_ = "";
      nadronTcpHostName_ = "";
      tcpPort_ = 0;
      nadronUdpHostName_ = "";
      udpPort_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private ConnectionConfig(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              user_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              pass_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              connectionKey_ = s;
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              nadronTcpHostName_ = s;
              break;
            }
            case 40: {

              tcpPort_ = input.readInt32();
              break;
            }
            case 50: {
              java.lang.String s = input.readStringRequireUtf8();

              nadronUdpHostName_ = s;
              break;
            }
            case 56: {

              udpPort_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.nadron.networking.NadronMessages.internal_static_loot_ConnectionConfig_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.nadron.networking.NadronMessages.internal_static_loot_ConnectionConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.nadron.networking.NadronMessages.ConnectionConfig.class, io.nadron.networking.NadronMessages.ConnectionConfig.Builder.class);
    }

    public static final int USER_FIELD_NUMBER = 1;
    private volatile java.lang.Object user_;
    /**
     * <code>optional string user = 1;</code>
     */
    public java.lang.String getUser() {
      java.lang.Object ref = user_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        user_ = s;
        return s;
      }
    }
    /**
     * <code>optional string user = 1;</code>
     */
    public com.google.protobuf.ByteString
        getUserBytes() {
      java.lang.Object ref = user_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        user_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PASS_FIELD_NUMBER = 2;
    private volatile java.lang.Object pass_;
    /**
     * <code>optional string pass = 2;</code>
     */
    public java.lang.String getPass() {
      java.lang.Object ref = pass_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        pass_ = s;
        return s;
      }
    }
    /**
     * <code>optional string pass = 2;</code>
     */
    public com.google.protobuf.ByteString
        getPassBytes() {
      java.lang.Object ref = pass_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        pass_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CONNECTIONKEY_FIELD_NUMBER = 3;
    private volatile java.lang.Object connectionKey_;
    /**
     * <code>optional string connectionKey = 3;</code>
     */
    public java.lang.String getConnectionKey() {
      java.lang.Object ref = connectionKey_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        connectionKey_ = s;
        return s;
      }
    }
    /**
     * <code>optional string connectionKey = 3;</code>
     */
    public com.google.protobuf.ByteString
        getConnectionKeyBytes() {
      java.lang.Object ref = connectionKey_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        connectionKey_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NADRONTCPHOSTNAME_FIELD_NUMBER = 4;
    private volatile java.lang.Object nadronTcpHostName_;
    /**
     * <code>optional string nadronTcpHostName = 4;</code>
     */
    public java.lang.String getNadronTcpHostName() {
      java.lang.Object ref = nadronTcpHostName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        nadronTcpHostName_ = s;
        return s;
      }
    }
    /**
     * <code>optional string nadronTcpHostName = 4;</code>
     */
    public com.google.protobuf.ByteString
        getNadronTcpHostNameBytes() {
      java.lang.Object ref = nadronTcpHostName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        nadronTcpHostName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TCPPORT_FIELD_NUMBER = 5;
    private int tcpPort_;
    /**
     * <code>optional int32 tcpPort = 5;</code>
     */
    public int getTcpPort() {
      return tcpPort_;
    }

    public static final int NADRONUDPHOSTNAME_FIELD_NUMBER = 6;
    private volatile java.lang.Object nadronUdpHostName_;
    /**
     * <code>optional string nadronUdpHostName = 6;</code>
     */
    public java.lang.String getNadronUdpHostName() {
      java.lang.Object ref = nadronUdpHostName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        nadronUdpHostName_ = s;
        return s;
      }
    }
    /**
     * <code>optional string nadronUdpHostName = 6;</code>
     */
    public com.google.protobuf.ByteString
        getNadronUdpHostNameBytes() {
      java.lang.Object ref = nadronUdpHostName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        nadronUdpHostName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int UDPPORT_FIELD_NUMBER = 7;
    private int udpPort_;
    /**
     * <code>optional int32 udpPort = 7;</code>
     */
    public int getUdpPort() {
      return udpPort_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getUserBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, user_);
      }
      if (!getPassBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, pass_);
      }
      if (!getConnectionKeyBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, connectionKey_);
      }
      if (!getNadronTcpHostNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, nadronTcpHostName_);
      }
      if (tcpPort_ != 0) {
        output.writeInt32(5, tcpPort_);
      }
      if (!getNadronUdpHostNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, nadronUdpHostName_);
      }
      if (udpPort_ != 0) {
        output.writeInt32(7, udpPort_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getUserBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, user_);
      }
      if (!getPassBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, pass_);
      }
      if (!getConnectionKeyBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, connectionKey_);
      }
      if (!getNadronTcpHostNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, nadronTcpHostName_);
      }
      if (tcpPort_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, tcpPort_);
      }
      if (!getNadronUdpHostNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, nadronUdpHostName_);
      }
      if (udpPort_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, udpPort_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.nadron.networking.NadronMessages.ConnectionConfig)) {
        return super.equals(obj);
      }
      io.nadron.networking.NadronMessages.ConnectionConfig other = (io.nadron.networking.NadronMessages.ConnectionConfig) obj;

      boolean result = true;
      result = result && getUser()
          .equals(other.getUser());
      result = result && getPass()
          .equals(other.getPass());
      result = result && getConnectionKey()
          .equals(other.getConnectionKey());
      result = result && getNadronTcpHostName()
          .equals(other.getNadronTcpHostName());
      result = result && (getTcpPort()
          == other.getTcpPort());
      result = result && getNadronUdpHostName()
          .equals(other.getNadronUdpHostName());
      result = result && (getUdpPort()
          == other.getUdpPort());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      hash = (37 * hash) + USER_FIELD_NUMBER;
      hash = (53 * hash) + getUser().hashCode();
      hash = (37 * hash) + PASS_FIELD_NUMBER;
      hash = (53 * hash) + getPass().hashCode();
      hash = (37 * hash) + CONNECTIONKEY_FIELD_NUMBER;
      hash = (53 * hash) + getConnectionKey().hashCode();
      hash = (37 * hash) + NADRONTCPHOSTNAME_FIELD_NUMBER;
      hash = (53 * hash) + getNadronTcpHostName().hashCode();
      hash = (37 * hash) + TCPPORT_FIELD_NUMBER;
      hash = (53 * hash) + getTcpPort();
      hash = (37 * hash) + NADRONUDPHOSTNAME_FIELD_NUMBER;
      hash = (53 * hash) + getNadronUdpHostName().hashCode();
      hash = (37 * hash) + UDPPORT_FIELD_NUMBER;
      hash = (53 * hash) + getUdpPort();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.nadron.networking.NadronMessages.ConnectionConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.nadron.networking.NadronMessages.ConnectionConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.nadron.networking.NadronMessages.ConnectionConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.nadron.networking.NadronMessages.ConnectionConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.nadron.networking.NadronMessages.ConnectionConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.nadron.networking.NadronMessages.ConnectionConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.nadron.networking.NadronMessages.ConnectionConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.nadron.networking.NadronMessages.ConnectionConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.nadron.networking.NadronMessages.ConnectionConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.nadron.networking.NadronMessages.ConnectionConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.nadron.networking.NadronMessages.ConnectionConfig prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code loot.ConnectionConfig}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:loot.ConnectionConfig)
        io.nadron.networking.NadronMessages.ConnectionConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.nadron.networking.NadronMessages.internal_static_loot_ConnectionConfig_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.nadron.networking.NadronMessages.internal_static_loot_ConnectionConfig_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.nadron.networking.NadronMessages.ConnectionConfig.class, io.nadron.networking.NadronMessages.ConnectionConfig.Builder.class);
      }

      // Construct using io.nadron.networking.NadronMessages.ConnectionConfig.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        user_ = "";

        pass_ = "";

        connectionKey_ = "";

        nadronTcpHostName_ = "";

        tcpPort_ = 0;

        nadronUdpHostName_ = "";

        udpPort_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.nadron.networking.NadronMessages.internal_static_loot_ConnectionConfig_descriptor;
      }

      public io.nadron.networking.NadronMessages.ConnectionConfig getDefaultInstanceForType() {
        return io.nadron.networking.NadronMessages.ConnectionConfig.getDefaultInstance();
      }

      public io.nadron.networking.NadronMessages.ConnectionConfig build() {
        io.nadron.networking.NadronMessages.ConnectionConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.nadron.networking.NadronMessages.ConnectionConfig buildPartial() {
        io.nadron.networking.NadronMessages.ConnectionConfig result = new io.nadron.networking.NadronMessages.ConnectionConfig(this);
        result.user_ = user_;
        result.pass_ = pass_;
        result.connectionKey_ = connectionKey_;
        result.nadronTcpHostName_ = nadronTcpHostName_;
        result.tcpPort_ = tcpPort_;
        result.nadronUdpHostName_ = nadronUdpHostName_;
        result.udpPort_ = udpPort_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.nadron.networking.NadronMessages.ConnectionConfig) {
          return mergeFrom((io.nadron.networking.NadronMessages.ConnectionConfig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.nadron.networking.NadronMessages.ConnectionConfig other) {
        if (other == io.nadron.networking.NadronMessages.ConnectionConfig.getDefaultInstance()) return this;
        if (!other.getUser().isEmpty()) {
          user_ = other.user_;
          onChanged();
        }
        if (!other.getPass().isEmpty()) {
          pass_ = other.pass_;
          onChanged();
        }
        if (!other.getConnectionKey().isEmpty()) {
          connectionKey_ = other.connectionKey_;
          onChanged();
        }
        if (!other.getNadronTcpHostName().isEmpty()) {
          nadronTcpHostName_ = other.nadronTcpHostName_;
          onChanged();
        }
        if (other.getTcpPort() != 0) {
          setTcpPort(other.getTcpPort());
        }
        if (!other.getNadronUdpHostName().isEmpty()) {
          nadronUdpHostName_ = other.nadronUdpHostName_;
          onChanged();
        }
        if (other.getUdpPort() != 0) {
          setUdpPort(other.getUdpPort());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.nadron.networking.NadronMessages.ConnectionConfig parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.nadron.networking.NadronMessages.ConnectionConfig) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object user_ = "";
      /**
       * <code>optional string user = 1;</code>
       */
      public java.lang.String getUser() {
        java.lang.Object ref = user_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          user_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string user = 1;</code>
       */
      public com.google.protobuf.ByteString
          getUserBytes() {
        java.lang.Object ref = user_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          user_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string user = 1;</code>
       */
      public Builder setUser(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        user_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string user = 1;</code>
       */
      public Builder clearUser() {
        
        user_ = getDefaultInstance().getUser();
        onChanged();
        return this;
      }
      /**
       * <code>optional string user = 1;</code>
       */
      public Builder setUserBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        user_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object pass_ = "";
      /**
       * <code>optional string pass = 2;</code>
       */
      public java.lang.String getPass() {
        java.lang.Object ref = pass_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          pass_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string pass = 2;</code>
       */
      public com.google.protobuf.ByteString
          getPassBytes() {
        java.lang.Object ref = pass_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          pass_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string pass = 2;</code>
       */
      public Builder setPass(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        pass_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string pass = 2;</code>
       */
      public Builder clearPass() {
        
        pass_ = getDefaultInstance().getPass();
        onChanged();
        return this;
      }
      /**
       * <code>optional string pass = 2;</code>
       */
      public Builder setPassBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        pass_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object connectionKey_ = "";
      /**
       * <code>optional string connectionKey = 3;</code>
       */
      public java.lang.String getConnectionKey() {
        java.lang.Object ref = connectionKey_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          connectionKey_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string connectionKey = 3;</code>
       */
      public com.google.protobuf.ByteString
          getConnectionKeyBytes() {
        java.lang.Object ref = connectionKey_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          connectionKey_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string connectionKey = 3;</code>
       */
      public Builder setConnectionKey(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        connectionKey_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string connectionKey = 3;</code>
       */
      public Builder clearConnectionKey() {
        
        connectionKey_ = getDefaultInstance().getConnectionKey();
        onChanged();
        return this;
      }
      /**
       * <code>optional string connectionKey = 3;</code>
       */
      public Builder setConnectionKeyBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        connectionKey_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object nadronTcpHostName_ = "";
      /**
       * <code>optional string nadronTcpHostName = 4;</code>
       */
      public java.lang.String getNadronTcpHostName() {
        java.lang.Object ref = nadronTcpHostName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          nadronTcpHostName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string nadronTcpHostName = 4;</code>
       */
      public com.google.protobuf.ByteString
          getNadronTcpHostNameBytes() {
        java.lang.Object ref = nadronTcpHostName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          nadronTcpHostName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string nadronTcpHostName = 4;</code>
       */
      public Builder setNadronTcpHostName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        nadronTcpHostName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string nadronTcpHostName = 4;</code>
       */
      public Builder clearNadronTcpHostName() {
        
        nadronTcpHostName_ = getDefaultInstance().getNadronTcpHostName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string nadronTcpHostName = 4;</code>
       */
      public Builder setNadronTcpHostNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        nadronTcpHostName_ = value;
        onChanged();
        return this;
      }

      private int tcpPort_ ;
      /**
       * <code>optional int32 tcpPort = 5;</code>
       */
      public int getTcpPort() {
        return tcpPort_;
      }
      /**
       * <code>optional int32 tcpPort = 5;</code>
       */
      public Builder setTcpPort(int value) {
        
        tcpPort_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tcpPort = 5;</code>
       */
      public Builder clearTcpPort() {
        
        tcpPort_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object nadronUdpHostName_ = "";
      /**
       * <code>optional string nadronUdpHostName = 6;</code>
       */
      public java.lang.String getNadronUdpHostName() {
        java.lang.Object ref = nadronUdpHostName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          nadronUdpHostName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string nadronUdpHostName = 6;</code>
       */
      public com.google.protobuf.ByteString
          getNadronUdpHostNameBytes() {
        java.lang.Object ref = nadronUdpHostName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          nadronUdpHostName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string nadronUdpHostName = 6;</code>
       */
      public Builder setNadronUdpHostName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        nadronUdpHostName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string nadronUdpHostName = 6;</code>
       */
      public Builder clearNadronUdpHostName() {
        
        nadronUdpHostName_ = getDefaultInstance().getNadronUdpHostName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string nadronUdpHostName = 6;</code>
       */
      public Builder setNadronUdpHostNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        nadronUdpHostName_ = value;
        onChanged();
        return this;
      }

      private int udpPort_ ;
      /**
       * <code>optional int32 udpPort = 7;</code>
       */
      public int getUdpPort() {
        return udpPort_;
      }
      /**
       * <code>optional int32 udpPort = 7;</code>
       */
      public Builder setUdpPort(int value) {
        
        udpPort_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 udpPort = 7;</code>
       */
      public Builder clearUdpPort() {
        
        udpPort_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:loot.ConnectionConfig)
    }

    // @@protoc_insertion_point(class_scope:loot.ConnectionConfig)
    private static final io.nadron.networking.NadronMessages.ConnectionConfig DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.nadron.networking.NadronMessages.ConnectionConfig();
    }

    public static io.nadron.networking.NadronMessages.ConnectionConfig getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ConnectionConfig>
        PARSER = new com.google.protobuf.AbstractParser<ConnectionConfig>() {
      public ConnectionConfig parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new ConnectionConfig(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ConnectionConfig> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ConnectionConfig> getParserForType() {
      return PARSER;
    }

    public io.nadron.networking.NadronMessages.ConnectionConfig getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface NadronEventOrBuilder extends
      // @@protoc_insertion_point(interface_extends:loot.NadronEvent)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .loot.EventType eventType = 1;</code>
     */
    int getEventTypeValue();
    /**
     * <code>optional .loot.EventType eventType = 1;</code>
     */
    io.nadron.networking.NadronMessages.EventType getEventType();

    /**
     * <code>optional int64 timeStamp = 2;</code>
     */
    long getTimeStamp();

    /**
     * <code>optional .google.protobuf.Any source = 3;</code>
     */
    boolean hasSource();
    /**
     * <code>optional .google.protobuf.Any source = 3;</code>
     */
    com.google.protobuf.Any getSource();
    /**
     * <code>optional .google.protobuf.Any source = 3;</code>
     */
    com.google.protobuf.AnyOrBuilder getSourceOrBuilder();
  }
  /**
   * <pre>
   * Wrapper object that allows message to be consumed by the Nadron Server
   * </pre>
   *
   * Protobuf type {@code loot.NadronEvent}
   */
  public  static final class NadronEvent extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:loot.NadronEvent)
      NadronEventOrBuilder {
    // Use NadronEvent.newBuilder() to construct.
    private NadronEvent(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private NadronEvent() {
      eventType_ = 0;
      timeStamp_ = 0L;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private NadronEvent(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();

              eventType_ = rawValue;
              break;
            }
            case 16: {

              timeStamp_ = input.readInt64();
              break;
            }
            case 26: {
              com.google.protobuf.Any.Builder subBuilder = null;
              if (source_ != null) {
                subBuilder = source_.toBuilder();
              }
              source_ = input.readMessage(com.google.protobuf.Any.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(source_);
                source_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.nadron.networking.NadronMessages.internal_static_loot_NadronEvent_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.nadron.networking.NadronMessages.internal_static_loot_NadronEvent_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.nadron.networking.NadronMessages.NadronEvent.class, io.nadron.networking.NadronMessages.NadronEvent.Builder.class);
    }

    public static final int EVENTTYPE_FIELD_NUMBER = 1;
    private int eventType_;
    /**
     * <code>optional .loot.EventType eventType = 1;</code>
     */
    public int getEventTypeValue() {
      return eventType_;
    }
    /**
     * <code>optional .loot.EventType eventType = 1;</code>
     */
    public io.nadron.networking.NadronMessages.EventType getEventType() {
      io.nadron.networking.NadronMessages.EventType result = io.nadron.networking.NadronMessages.EventType.valueOf(eventType_);
      return result == null ? io.nadron.networking.NadronMessages.EventType.UNRECOGNIZED : result;
    }

    public static final int TIMESTAMP_FIELD_NUMBER = 2;
    private long timeStamp_;
    /**
     * <code>optional int64 timeStamp = 2;</code>
     */
    public long getTimeStamp() {
      return timeStamp_;
    }

    public static final int SOURCE_FIELD_NUMBER = 3;
    private com.google.protobuf.Any source_;
    /**
     * <code>optional .google.protobuf.Any source = 3;</code>
     */
    public boolean hasSource() {
      return source_ != null;
    }
    /**
     * <code>optional .google.protobuf.Any source = 3;</code>
     */
    public com.google.protobuf.Any getSource() {
      return source_ == null ? com.google.protobuf.Any.getDefaultInstance() : source_;
    }
    /**
     * <code>optional .google.protobuf.Any source = 3;</code>
     */
    public com.google.protobuf.AnyOrBuilder getSourceOrBuilder() {
      return getSource();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (eventType_ != io.nadron.networking.NadronMessages.EventType.ANY.getNumber()) {
        output.writeEnum(1, eventType_);
      }
      if (timeStamp_ != 0L) {
        output.writeInt64(2, timeStamp_);
      }
      if (source_ != null) {
        output.writeMessage(3, getSource());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (eventType_ != io.nadron.networking.NadronMessages.EventType.ANY.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, eventType_);
      }
      if (timeStamp_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, timeStamp_);
      }
      if (source_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getSource());
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.nadron.networking.NadronMessages.NadronEvent)) {
        return super.equals(obj);
      }
      io.nadron.networking.NadronMessages.NadronEvent other = (io.nadron.networking.NadronMessages.NadronEvent) obj;

      boolean result = true;
      result = result && eventType_ == other.eventType_;
      result = result && (getTimeStamp()
          == other.getTimeStamp());
      result = result && (hasSource() == other.hasSource());
      if (hasSource()) {
        result = result && getSource()
            .equals(other.getSource());
      }
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      hash = (37 * hash) + EVENTTYPE_FIELD_NUMBER;
      hash = (53 * hash) + eventType_;
      hash = (37 * hash) + TIMESTAMP_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTimeStamp());
      if (hasSource()) {
        hash = (37 * hash) + SOURCE_FIELD_NUMBER;
        hash = (53 * hash) + getSource().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.nadron.networking.NadronMessages.NadronEvent parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.nadron.networking.NadronMessages.NadronEvent parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.nadron.networking.NadronMessages.NadronEvent parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.nadron.networking.NadronMessages.NadronEvent parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.nadron.networking.NadronMessages.NadronEvent parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.nadron.networking.NadronMessages.NadronEvent parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.nadron.networking.NadronMessages.NadronEvent parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.nadron.networking.NadronMessages.NadronEvent parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.nadron.networking.NadronMessages.NadronEvent parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.nadron.networking.NadronMessages.NadronEvent parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.nadron.networking.NadronMessages.NadronEvent prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Wrapper object that allows message to be consumed by the Nadron Server
     * </pre>
     *
     * Protobuf type {@code loot.NadronEvent}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:loot.NadronEvent)
        io.nadron.networking.NadronMessages.NadronEventOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.nadron.networking.NadronMessages.internal_static_loot_NadronEvent_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.nadron.networking.NadronMessages.internal_static_loot_NadronEvent_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.nadron.networking.NadronMessages.NadronEvent.class, io.nadron.networking.NadronMessages.NadronEvent.Builder.class);
      }

      // Construct using io.nadron.networking.NadronMessages.NadronEvent.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        eventType_ = 0;

        timeStamp_ = 0L;

        if (sourceBuilder_ == null) {
          source_ = null;
        } else {
          source_ = null;
          sourceBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.nadron.networking.NadronMessages.internal_static_loot_NadronEvent_descriptor;
      }

      public io.nadron.networking.NadronMessages.NadronEvent getDefaultInstanceForType() {
        return io.nadron.networking.NadronMessages.NadronEvent.getDefaultInstance();
      }

      public io.nadron.networking.NadronMessages.NadronEvent build() {
        io.nadron.networking.NadronMessages.NadronEvent result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.nadron.networking.NadronMessages.NadronEvent buildPartial() {
        io.nadron.networking.NadronMessages.NadronEvent result = new io.nadron.networking.NadronMessages.NadronEvent(this);
        result.eventType_ = eventType_;
        result.timeStamp_ = timeStamp_;
        if (sourceBuilder_ == null) {
          result.source_ = source_;
        } else {
          result.source_ = sourceBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.nadron.networking.NadronMessages.NadronEvent) {
          return mergeFrom((io.nadron.networking.NadronMessages.NadronEvent)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.nadron.networking.NadronMessages.NadronEvent other) {
        if (other == io.nadron.networking.NadronMessages.NadronEvent.getDefaultInstance()) return this;
        if (other.eventType_ != 0) {
          setEventTypeValue(other.getEventTypeValue());
        }
        if (other.getTimeStamp() != 0L) {
          setTimeStamp(other.getTimeStamp());
        }
        if (other.hasSource()) {
          mergeSource(other.getSource());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.nadron.networking.NadronMessages.NadronEvent parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.nadron.networking.NadronMessages.NadronEvent) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int eventType_ = 0;
      /**
       * <code>optional .loot.EventType eventType = 1;</code>
       */
      public int getEventTypeValue() {
        return eventType_;
      }
      /**
       * <code>optional .loot.EventType eventType = 1;</code>
       */
      public Builder setEventTypeValue(int value) {
        eventType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .loot.EventType eventType = 1;</code>
       */
      public io.nadron.networking.NadronMessages.EventType getEventType() {
        io.nadron.networking.NadronMessages.EventType result = io.nadron.networking.NadronMessages.EventType.valueOf(eventType_);
        return result == null ? io.nadron.networking.NadronMessages.EventType.UNRECOGNIZED : result;
      }
      /**
       * <code>optional .loot.EventType eventType = 1;</code>
       */
      public Builder setEventType(io.nadron.networking.NadronMessages.EventType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        eventType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .loot.EventType eventType = 1;</code>
       */
      public Builder clearEventType() {
        
        eventType_ = 0;
        onChanged();
        return this;
      }

      private long timeStamp_ ;
      /**
       * <code>optional int64 timeStamp = 2;</code>
       */
      public long getTimeStamp() {
        return timeStamp_;
      }
      /**
       * <code>optional int64 timeStamp = 2;</code>
       */
      public Builder setTimeStamp(long value) {
        
        timeStamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 timeStamp = 2;</code>
       */
      public Builder clearTimeStamp() {
        
        timeStamp_ = 0L;
        onChanged();
        return this;
      }

      private com.google.protobuf.Any source_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Any, com.google.protobuf.Any.Builder, com.google.protobuf.AnyOrBuilder> sourceBuilder_;
      /**
       * <code>optional .google.protobuf.Any source = 3;</code>
       */
      public boolean hasSource() {
        return sourceBuilder_ != null || source_ != null;
      }
      /**
       * <code>optional .google.protobuf.Any source = 3;</code>
       */
      public com.google.protobuf.Any getSource() {
        if (sourceBuilder_ == null) {
          return source_ == null ? com.google.protobuf.Any.getDefaultInstance() : source_;
        } else {
          return sourceBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .google.protobuf.Any source = 3;</code>
       */
      public Builder setSource(com.google.protobuf.Any value) {
        if (sourceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          source_ = value;
          onChanged();
        } else {
          sourceBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .google.protobuf.Any source = 3;</code>
       */
      public Builder setSource(
          com.google.protobuf.Any.Builder builderForValue) {
        if (sourceBuilder_ == null) {
          source_ = builderForValue.build();
          onChanged();
        } else {
          sourceBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .google.protobuf.Any source = 3;</code>
       */
      public Builder mergeSource(com.google.protobuf.Any value) {
        if (sourceBuilder_ == null) {
          if (source_ != null) {
            source_ =
              com.google.protobuf.Any.newBuilder(source_).mergeFrom(value).buildPartial();
          } else {
            source_ = value;
          }
          onChanged();
        } else {
          sourceBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .google.protobuf.Any source = 3;</code>
       */
      public Builder clearSource() {
        if (sourceBuilder_ == null) {
          source_ = null;
          onChanged();
        } else {
          source_ = null;
          sourceBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .google.protobuf.Any source = 3;</code>
       */
      public com.google.protobuf.Any.Builder getSourceBuilder() {
        
        onChanged();
        return getSourceFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .google.protobuf.Any source = 3;</code>
       */
      public com.google.protobuf.AnyOrBuilder getSourceOrBuilder() {
        if (sourceBuilder_ != null) {
          return sourceBuilder_.getMessageOrBuilder();
        } else {
          return source_ == null ?
              com.google.protobuf.Any.getDefaultInstance() : source_;
        }
      }
      /**
       * <code>optional .google.protobuf.Any source = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Any, com.google.protobuf.Any.Builder, com.google.protobuf.AnyOrBuilder> 
          getSourceFieldBuilder() {
        if (sourceBuilder_ == null) {
          sourceBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Any, com.google.protobuf.Any.Builder, com.google.protobuf.AnyOrBuilder>(
                  getSource(),
                  getParentForChildren(),
                  isClean());
          source_ = null;
        }
        return sourceBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:loot.NadronEvent)
    }

    // @@protoc_insertion_point(class_scope:loot.NadronEvent)
    private static final io.nadron.networking.NadronMessages.NadronEvent DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.nadron.networking.NadronMessages.NadronEvent();
    }

    public static io.nadron.networking.NadronMessages.NadronEvent getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<NadronEvent>
        PARSER = new com.google.protobuf.AbstractParser<NadronEvent>() {
      public NadronEvent parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new NadronEvent(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<NadronEvent> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<NadronEvent> getParserForType() {
      return PARSER;
    }

    public io.nadron.networking.NadronMessages.NadronEvent getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_loot_ConnectionConfig_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_loot_ConnectionConfig_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_loot_NadronEvent_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_loot_NadronEvent_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\014nadron.proto\022\004loot\032\031google/protobuf/an" +
      "y.proto\"\235\001\n\020ConnectionConfig\022\014\n\004user\030\001 \001" +
      "(\t\022\014\n\004pass\030\002 \001(\t\022\025\n\rconnectionKey\030\003 \001(\t\022" +
      "\031\n\021nadronTcpHostName\030\004 \001(\t\022\017\n\007tcpPort\030\005 " +
      "\001(\005\022\031\n\021nadronUdpHostName\030\006 \001(\t\022\017\n\007udpPor" +
      "t\030\007 \001(\005\"j\n\013NadronEvent\022\"\n\teventType\030\001 \001(" +
      "\0162\017.loot.EventType\022\021\n\ttimeStamp\030\002 \001(\003\022$\n" +
      "\006source\030\003 \001(\0132\024.google.protobuf.Any*\270\003\n\t" +
      "EventType\022\007\n\003ANY\020\000\022\024\n\020PROTOCOL_VERSION\020\001" +
      "\022\013\n\007CONNECT\020\002\022\r\n\tRECONNECT\020\003\022\022\n\016CONNECT_",
      "FAILED\020\006\022\n\n\006LOG_IN\020\010\022\013\n\007LOG_OUT\020\n\022\022\n\016LOG" +
      "_IN_SUCCESS\020\013\022\022\n\016LOG_IN_FAILURE\020\014\022\023\n\017LOG" +
      "_OUT_SUCCESS\020\016\022\023\n\017LOG_OUT_FAILURE\020\017\022\r\n\tG" +
      "AME_LIST\020\020\022\r\n\tROOM_LIST\020\022\022\022\n\016GAME_ROOM_J" +
      "OIN\020\024\022\023\n\017GAME_ROOM_LEAVE\020\026\022\032\n\026GAME_ROOM_" +
      "JOIN_SUCCESS\020\030\022\032\n\026GAME_ROOM_JOIN_FAILURE" +
      "\020\031\022\t\n\005START\020\032\022\010\n\004STOP\020\033\022\023\n\017SESSION_MESSA" +
      "GE\020\034\022\023\n\017NETWORK_MESSAGE\020\035\022\024\n\020CHANGE_ATTR" +
      "IBUTE\020 \022\016\n\nDISCONNECT\020\"\022\r\n\tEXCEPTION\020$B7" +
      "\n\024io.nadron.networkingB\016NadronMessages\252\002",
      "\016NadronMessagesb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.google.protobuf.AnyProto.getDescriptor(),
        }, assigner);
    internal_static_loot_ConnectionConfig_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_loot_ConnectionConfig_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_loot_ConnectionConfig_descriptor,
        new java.lang.String[] { "User", "Pass", "ConnectionKey", "NadronTcpHostName", "TcpPort", "NadronUdpHostName", "UdpPort", });
    internal_static_loot_NadronEvent_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_loot_NadronEvent_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_loot_NadronEvent_descriptor,
        new java.lang.String[] { "EventType", "TimeStamp", "Source", });
    com.google.protobuf.AnyProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
